# -*- coding: utf-8 -*-
"""pre_process.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MkSFg-WU86pCNRMQ0Yryz-UD1F-Jfws8
"""

import nltk
import string
import re

def text_lowercase(text):
    return text.lower()

# import the inflect library
import inflect
p = inflect.engine()
nltk.download('omw-1.4')
 
# convert number into words
def convert_number(text):
    # split string into list of words
    temp_str = text.split()
    # initialise empty list
    new_string = []
 
    for word in temp_str:
        # if word is a digit, convert the digit
        # to numbers and append into the new_string list
        if word.isdigit():
            temp = p.number_to_words(word)
            new_string.append(temp)
 
        # append the word as it is
        else:
            new_string.append(word)
 
    # join the words of new_string to form a string
    temp_str = ' '.join(new_string)
    return temp_str

def remove_punctuation(text):
    translator = str.maketrans('', '', string.punctuation)
    return text.translate(translator)

def remove_whitespace(text):
    return  " ".join(text.split())

from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
nltk.download('stopwords')
nltk.download('punkt')
 
# remove stopwords function
def remove_stopwords(text):
    stop_words = set(stopwords.words("english"))
    word_tokens = word_tokenize(text)
    filtered_text = [word for word in word_tokens if word not in stop_words]
    return filtered_text

from nltk.stem.porter import PorterStemmer
stemmer = PorterStemmer()
 
# stem words in the list of tokenized words
def stem_words(word_tokens):
    #word_tokens = word_tokenize(text)
    stems = [stemmer.stem(word) for word in word_tokens]
    return stems

from nltk.stem import WordNetLemmatizer
lemmatizer = WordNetLemmatizer()
nltk.download('wordnet')
# lemmatize string
def lemmatize_word(word_tokens):
    #word_tokens = word_tokenize(text)
    # provide context i.e. part-of-speech
    lemmas = [lemmatizer.lemmatize(word, pos ='v') for word in word_tokens]
    return lemmas

text='dance piece showing the mythological events of Lord Krishnaâ€™s naughtiness during his childhood'
a=text_lowercase(text)
b=convert_number(a)
c=remove_punctuation(b)
d=remove_whitespace(c)
e=remove_stopwords(d)
# initialiseprint(e)
print(lemmatize_word(e))